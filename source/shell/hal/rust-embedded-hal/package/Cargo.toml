[package]
name = "embassy-vsf"
version = "0.1.0"
edition = "2024"
license = "Apache-2.0"
description = "VSF Hardware Abstraction Layer"
keywords = ["embedded", "async", "hal", "embedded-hal"]
categories = ["embedded", "hardware-support", "no-std", "asynchronous"]
repository = "https://github.com/vsfteam/vsf"

[dependencies]
embassy-embedded-hal = "0.5"
embassy-sync = { version = "0.7.2", git = "https://github.com/embassy-rs/embassy", features = ["defmt"] }
embassy-executor = { version = "0.9.0", git = "https://github.com/embassy-rs/embassy", features = ["arch-cortex-m", "executor-thread", "defmt"] }
embassy-time = { version = "0.5.0", git = "https://github.com/embassy-rs/embassy", features = ["defmt", "defmt-timestamp-uptime", "tick-hz-32_768"] }
embassy-usb = { version = "0.5.1", git = "https://github.com/embassy-rs/embassy", features = ["defmt"] }
embassy-futures = { version = "0.1.2", git = "https://github.com/embassy-rs/embassy" }
embassy-hal-internal = { version = "0.3.0", git = "https://github.com/embassy-rs/embassy", features = ["cortex-m", "prio-bits-4"] }

cortex-m = { version = "0.7", features = ["inline-asm", "critical-section-single-core"] }
cortex-m-rt = { version = "0.7", features = ["device"] }
critical-section = "1.1"

embedded-hal-02 = { package = "embedded-hal", version = "0.2.6", features = ["unproven"] }
embedded-hal-1 = { package = "embedded-hal", version = "1.0" }
embedded-hal-bus = { version = "0.3", features = ["async"] }
embedded-io = { version = "0.6.0" }
embedded-io-async = { version = "0.6" }
embedded-hal-async = { version = "1.0" }
embedded-hal-nb = { version = "1.0" }
embedded-can = "0.4"

defmt = "1.0"
defmt-rtt = "1.0"
panic-probe = { version = "1.0", features = ["print-defmt"] }
paste = "1.0"

vsf-hal-macros = { path = "./vsf-hal-macros" }

[features]
defmt = []
log = []
rt = []

[profile.release]
opt-level = 3
lto = true
codegen-units = 1

[profile.dev]
opt-level = 0

[build-dependencies]
bindgen = "0.72"
toml = "0.9"
shellexpand = "3.1"
lazy_static = "1.4"
regex = "1.11"

[vsf]
path = "${VSF_PATH}"

[vsf.target]
vendor = "Nations"
model = "N32H765IIB7EC"
# if there is no ./memory.x, memory MUST be set so that build.rs will copy memory.x to the current directory
memory = "./memory/N32H765IIB7EC/memory.x"
flags = [
    "--target=thumbv7em-none-eabihf",
    "-I${VSF_PATH}/source/utilities/compiler/arm/3rd-party/CMSIS/CMSIS/Core/Include",
]
